[{"C:\\Users\\PALLAVI\\Downloads\\Project-gdsc\\project_gdsc\\src\\index.js":"1","C:\\Users\\PALLAVI\\Downloads\\Project-gdsc\\project_gdsc\\src\\App.js":"2","C:\\Users\\PALLAVI\\Downloads\\Project-gdsc\\project_gdsc\\src\\reportWebVitals.js":"3","C:\\Users\\PALLAVI\\Downloads\\Project-gdsc\\project_gdsc\\src\\Components\\Sidebar.js":"4","C:\\Users\\PALLAVI\\Downloads\\Project-gdsc\\project_gdsc\\src\\Components\\Home.js":"5","C:\\Users\\PALLAVI\\Downloads\\Project-gdsc\\project_gdsc\\src\\Components\\Threads.js":"6","C:\\Users\\PALLAVI\\Downloads\\Project-gdsc\\project_gdsc\\src\\Components\\Response.js":"7","C:\\Users\\PALLAVI\\Downloads\\Project-gdsc\\project_gdsc\\src\\Components\\Input.js":"8","C:\\Users\\PALLAVI\\Downloads\\Project-gdsc\\project_gdsc\\src\\Components\\Dictaphone.js":"9"},{"size":535,"mtime":1705734773290,"results":"10","hashOfConfig":"11"},{"size":269,"mtime":1705734773243,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1705734773306,"results":"13","hashOfConfig":"11"},{"size":1658,"mtime":1705751836070,"results":"14","hashOfConfig":"11"},{"size":1652,"mtime":1705751984166,"results":"15","hashOfConfig":"11"},{"size":3024,"mtime":1705748582998,"results":"16","hashOfConfig":"11"},{"size":602,"mtime":1705734773540,"results":"17","hashOfConfig":"11"},{"size":300,"mtime":1705734773509,"results":"18","hashOfConfig":"11"},{"size":1006,"mtime":1705734773478,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"16lpjdi",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"23"},"C:\\Users\\PALLAVI\\Downloads\\Project-gdsc\\project_gdsc\\src\\index.js",[],[],[],"C:\\Users\\PALLAVI\\Downloads\\Project-gdsc\\project_gdsc\\src\\App.js",[],[],"C:\\Users\\PALLAVI\\Downloads\\Project-gdsc\\project_gdsc\\src\\reportWebVitals.js",[],[],"C:\\Users\\PALLAVI\\Downloads\\Project-gdsc\\project_gdsc\\src\\Components\\Sidebar.js",[],[],"C:\\Users\\PALLAVI\\Downloads\\Project-gdsc\\project_gdsc\\src\\Components\\Home.js",[],[],"C:\\Users\\PALLAVI\\Downloads\\Project-gdsc\\project_gdsc\\src\\Components\\Threads.js",["51","52","53"],[],"import React, { useState, useEffect } from \"react\";\nimport User from \"../Assets/User.svg\";\nimport Response from \"./Response.js\";\nimport Input from \"./Input\";\n// import darkmode from \"../Assets/darkmode.svg\";\nimport Switch from \"react-switch\";\nimport Dictaphone from \"./Dictaphone\";\nimport Send from \"../Assets/send.svg\";\n\nfunction Threads() {\n  const [checked, setchecked] = useState(false);\n  const [input, setinput] = useState(\"\");\n  const [msg, setmsg] = useState(input);\n  const [typing, settyping] = useState(false);\n  const [messages, setMessages] = useState([]);\n\n  const handleClick = () => {\n    if (checked) {\n      setchecked(false);\n    } else {\n      setchecked(true);\n    }\n  };\n  console.log(msg);\n  useEffect(() => {}, [msg]);\n  return (\n    <div className=\"flex flex-col justify-between h-[98vh]\">\n      <div className=\"bg-[#222222] flex mx-2 p-1 mt-4 px-2 rounded-2xl text-white justify-between\">\n        <div className=\"flex p-2\">\n          <img src={User} className=\"w-10 mx-2\" alt=\"User\" />\n          <div>\n            <p>Xbot</p>\n            <p className=\"text-xs\">@Xbot</p>\n          </div>\n        </div>\n      </div>\n      {/* Message Area */}\n      <div className=\"overflow-y-scroll h-[75vh] py-2 px-4 scrollbar scrollbar-thumb-gray-900 scrollbar-h-[2vh] \">\n        <Response msg=\"Welcome! Just input your experience, we will help you out\" />\n\n        {messages.map((res) => (\n          <div className=\"py-2 pl-4\">\n            <Input msg={res.input} />\n            <Response msg={res.res} />\n          </div>\n        ))}\n        {typing && (\n          <div className=\"px-4 w-fit p-3 h-fit bg-[#494949] ml-auto mr-16 rounded-lg text-center text-sm text-white rounded-br-none align-right \">\n            ...\n          </div>\n        )}\n      </div>\n\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          setMessages([\n            ...messages,\n            {\n              input: input,\n              res: \"Explain your Problem\",\n            },\n          ]);\n          setinput(\"\");\n          settyping(false);\n        }}\n        className=\"mx-2 bg-[#222222] flex justify-between w-[80vw] px-4 py-2 rounded-lg\"\n      >\n        <input\n          onFocus={() => settyping(true)}\n          autoFocus\n          value={input}\n          type=\"text\"\n          placeholder=\"Message Xbot\"\n          className=\"px-4 w-[60vw] h-[7vh] bg-[#222222] rounded-lg  text-white focus:outline-none focus:border-none\"\n          onChange={(e) => {\n            setinput(e.target.value);\n          }}\n        />\n        <div className=\"flex\">\n          <button type=\"submit\" className=\"mx-0\">\n            <img\n              alt=\"Send\"\n              src={Send}\n              className=\"text-white w-[4.5vw] h-[4.5vh] justify-center cursor-pointer mt-0.7 ml-2\"\n            />\n          </button>\n          <Dictaphone\n            input={input}\n            setinput={setinput}\n            className=\"cursor-pointer px-0\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Threads;\n","C:\\Users\\PALLAVI\\Downloads\\Project-gdsc\\project_gdsc\\src\\Components\\Response.js",["54","55"],[],"import React from \"react\";\nimport axios from \"axios\";\n\nconst Response = ({ msg }) => {\n  const formMsg = new FormData();\n\n  // formMsg.append(\"msg\", msg);\n  // axios({\n  //   method: \"post\",\n  //   url: \"http://10.5.133.8:5000/api\",\n  //   headers: { \"Content-Type\": \"multipart/form-data\" },\n  //   data: formMsg,\n  // }).then((response) => {\n  //   console.log(response);\n  // });\n\n  return (\n    <div className=\"p-3 \">\n      <div className=\"h-fit rounded-lg mt-2 text-sm text-white rounded-bl-none bg-[#222222] p-3 w-fit ml-0\">\n        {msg}\n      </div>\n    </div>\n  );\n};\n\nexport default Response;\n","C:\\Users\\PALLAVI\\Downloads\\Project-gdsc\\project_gdsc\\src\\Components\\Input.js",[],[],"C:\\Users\\PALLAVI\\Downloads\\Project-gdsc\\project_gdsc\\src\\Components\\Dictaphone.js",["56"],[],"import React, { useState } from \"react\";\n\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from \"react-speech-recognition\";\nimport Mic from \"../Assets/mic.svg\";\nimport OnMic from \"../Assets/micon.svg\";\n\nconst Dictaphone = ({ input, setinput }) => {\n  const [mic, setMic] = useState(false);\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition,\n  } = useSpeechRecognition();\n\n  if (!browserSupportsSpeechRecognition) {\n    return alert(\"Browser doesn't support speech recognition\");\n  }\n  const onMicStart = () => {\n    setMic(!mic);\n    mic\n      ? SpeechRecognition.startListening()\n      : SpeechRecognition.stopListening();\n    console.log(transcript);\n    setinput(transcript);\n  };\n\n  return (\n    <div>\n      <img\n        src={listening ? OnMic : Mic}\n        alt=\"Mic\"\n        className=\"w-[4.5vw] h-[5vh] mt-2 px-0 cursor-pointer transition-all user-select-none\"\n        onClick={onMicStart}\n      />\n    </div>\n  );\n};\nexport default Dictaphone;\n",{"ruleId":"57","severity":1,"message":"58","line":6,"column":8,"nodeType":"59","messageId":"60","endLine":6,"endColumn":14},{"ruleId":"57","severity":1,"message":"61","line":13,"column":15,"nodeType":"59","messageId":"60","endLine":13,"endColumn":21},{"ruleId":"57","severity":1,"message":"62","line":17,"column":9,"nodeType":"59","messageId":"60","endLine":17,"endColumn":20},{"ruleId":"57","severity":1,"message":"63","line":2,"column":8,"nodeType":"59","messageId":"60","endLine":2,"endColumn":13},{"ruleId":"57","severity":1,"message":"64","line":5,"column":9,"nodeType":"59","messageId":"60","endLine":5,"endColumn":16},{"ruleId":"57","severity":1,"message":"65","line":14,"column":5,"nodeType":"59","messageId":"60","endLine":14,"endColumn":20},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'setmsg' is assigned a value but never used.","'handleClick' is assigned a value but never used.","'axios' is defined but never used.","'formMsg' is assigned a value but never used.","'resetTranscript' is assigned a value but never used."]